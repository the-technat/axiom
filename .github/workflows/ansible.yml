name: Run ansible playbook

on:
  workflow_dispatch:
    inputs:
      playbook:
        type: string
        required: true
        description: Playbook to run
      check-mode:
        type: boolean
        description: Run playbook in check mode

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    steps:
    - name: Checkout repository
      with:
        submodules: true
      uses: actions/checkout@v4
    - name: Setup akeyless-cli
      run: |
        curl -o akeyless https://akeyless-cli.s3.us-east-2.amazonaws.com/cli/latest/production/cli-linux-amd64
        sudo install -m 555 akeyless /usr/local/bin/akeyless
        rm akeyless
        mkdir $HOME/.akeyless
        akeyless --init
        akeyless --version
    - name: Fetch secrets from AKeyless
      id: fetch-secrets
      uses: LanceMcCarthy/akeyless-action@v3
      with:
        access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
        static-secrets: |
          {
            "/axiom/actions/tailscale_oauth_client_id":"TS_OAUTH_CLIENT_ID",
            "/axiom/actions/tailscale_oauth_secret":"TS_OAUTH_SECRET"
          }
    - name: Join tailnet
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ env.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ env.TS_OAUTH_SECRET }}
        tags: tag:acl-axiom-ci
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('ansible/requirements.txt') }}
    - name: Install pip dependencies
      run: pip install --upgrade --upgrade-strategy eager -r ansible/requirements.txt 
    - name: Install ansible-galaxy requirements
      run: ansible-galaxy install -r ansible/requirements.yml
    - name: Generate akeyless auth token
      run: echo VAULT_TOKEN=$(akeyless auth --access-type jwt --access-id ${{ env.AKEYLESS_ACCESS_ID }} --jwt ${{ secrets.GITHUB_TOKEN }} --json true | jq '.token' | tr -d "\"") >> $GITHUB_ENV 
    - name: Run ansible playbook (check mode)
      run: ansible-playbook ansible/${{ github.event.inputs.playbook }} --check
      if: ${{ github.event.inputs.check-mode }} == true
      env: 
        ANSIBLE_CONFIG: ansible/ansible.cfg
        VAULT_ADDR: https://hvp.akeyless.io
    - name: Run ansible playbook
      run: ansible-playbook ansible/${{ github.event.inputs.playbook }}
      if: ${{ github.event.inputs.check-mode }} == false
      env: 
        ANSIBLE_CONFIG: ansible/ansible.cfg
        VAULT_ADDR: https://hvp.akeyless.io
